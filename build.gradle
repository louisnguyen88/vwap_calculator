plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.avast.gradle.docker-compose" version "0.17.10"
	id "com.github.davidmc24.gradle.plugin.avro" version '1.9.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri("https://packages.confluent.io/maven/")
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.confluent:kafka-avro-serializer:7.7.1'
	implementation 'io.confluent:kafka-streams-avro-serde:7.7.1'
	implementation 'org.slf4j:slf4j-log4j12:1.7.29'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.awaitility:awaitility'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Define the Avro task correctly
sourceSets {
	main {
		java {
			srcDirs += 'src/main/resources/avro' // Set relative path for Avro files
		}
	}
}

springBoot {
	mainClass.set("com.example.VWAPApplication") // Ensure this matches your main class
}

// Docker Compose configuration
dockerCompose {
	useComposeFiles = ['compose.yaml']
}

dockerCompose.isRequiredBy(tasks.named("test"))

tasks.named('test') {
	useJUnitPlatform()
	enabled = false
}

// Optional standalone Docker tasks, separate from build
task startDockerContainers {
	dependsOn 'composeUp'
}

task stopDockerContainers {
	dependsOn 'composeDown'
}
